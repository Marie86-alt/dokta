{"dependencies":[{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"],"imports":1}},{"name":"expo-device","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":53},"end":{"line":2,"column":38,"index":91}}],"key":"bBpmAhO1g++sdeUzQmFVGoQIVwg=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":92},"end":{"line":3,"column":39,"index":131}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"expo-linking","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":154,"column":24,"index":4477},"end":{"line":154,"column":47,"index":4500}}],"key":"F3IRuZxT1cyHB74rJR7WrB3Q6GA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoNotifications = require(_dependencyMap[0], \"expo-notifications\");\n  var Notifications = _interopNamespace(_expoNotifications);\n  var _expoDevice = require(_dependencyMap[1], \"expo-device\");\n  var Device = _interopNamespace(_expoDevice);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Configuration du comportement des notifications\n  Notifications.setNotificationHandler({\n    handleNotification: async () => ({\n      shouldShowAlert: true,\n      shouldPlaySound: true,\n      shouldSetBadge: true\n    })\n  });\n  class NotificationService {\n    expoPushToken = null;\n\n    /**\n     * Enregistrer l'appareil pour les notifications push\n     */\n    async registerForPushNotifications() {\n      try {\n        if (!Device.isDevice) {\n          console.log('Les notifications push n√©cessitent un appareil physique');\n          return null;\n        }\n\n        // V√©rifier les permissions existantes\n        const {\n          status: existingStatus\n        } = await Notifications.getPermissionsAsync();\n        let finalStatus = existingStatus;\n\n        // Demander les permissions si n√©cessaires\n        if (existingStatus !== 'granted') {\n          const {\n            status\n          } = await Notifications.requestPermissionsAsync();\n          finalStatus = status;\n        }\n        if (finalStatus !== 'granted') {\n          console.log('Permission refus√©e pour les notifications push');\n          return null;\n        }\n\n        // Obtenir le token Expo\n        const tokenData = await Notifications.getExpoPushTokenAsync({\n          projectId: Constants.default.expoConfig?.extra?.eas?.projectId\n        });\n        this.expoPushToken = tokenData.data;\n        console.log('Token push Expo:', this.expoPushToken);\n\n        // Configurer les cat√©gories de notifications\n        await this.setupNotificationCategories();\n        return this.expoPushToken;\n      } catch (error) {\n        console.error('Erreur lors de l\\'enregistrement des notifications:', error);\n        return null;\n      }\n    }\n\n    /**\n     * Configurer les cat√©gories de notifications avec actions\n     */\n    async setupNotificationCategories() {\n      await Notifications.setNotificationCategoryAsync('appointment-reminder', [{\n        identifier: 'view-maps',\n        buttonTitle: 'Voir itin√©raire',\n        options: {\n          foreground: true\n        }\n      }, {\n        identifier: 'view-appointment',\n        buttonTitle: 'Voir RDV',\n        options: {\n          foreground: true\n        }\n      }]);\n    }\n\n    /**\n     * Enregistrer le token sur le serveur backend\n     */\n    async registerTokenWithBackend(userId, token) {\n      try {\n        const EXPO_BACKEND_URL = process.env.EXPO_PUBLIC_BACKEND_URL;\n        const response = await fetch(`${EXPO_BACKEND_URL}/api/notifications/register-token`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: userId,\n            expo_token: token,\n            device_info: {\n              platform: Platform.default.OS,\n              deviceName: Device.deviceName,\n              osVersion: Device.osVersion\n            }\n          })\n        });\n        if (response.ok) {\n          console.log('Token enregistr√© avec succ√®s sur le serveur');\n          return true;\n        } else {\n          console.error('Erreur lors de l\\'enregistrement du token:', await response.text());\n          return false;\n        }\n      } catch (error) {\n        console.error('Erreur r√©seau lors de l\\'enregistrement du token:', error);\n        return false;\n      }\n    }\n\n    /**\n     * Configurer les gestionnaires de notifications\n     */\n    setupNotificationHandlers() {\n      // Notification re√ßue en premier plan\n      Notifications.addNotificationReceivedListener(notification => {\n        console.log('Notification re√ßue:', notification);\n      });\n\n      // R√©ponse √† une notification (clic utilisateur)\n      Notifications.addNotificationResponseReceivedListener(response => {\n        const {\n          data\n        } = response.notification.request.content;\n        const {\n          actionIdentifier\n        } = response;\n        console.log('R√©ponse notification:', {\n          data,\n          actionIdentifier\n        });\n        this.handleNotificationResponse(data, actionIdentifier);\n      });\n    }\n\n    /**\n     * G√©rer les r√©ponses aux notifications\n     */\n    async handleNotificationResponse(data, actionIdentifier) {\n      const {\n        Linking\n      } = require(_dependencyMap[4], \"expo-linking\");\n      switch (actionIdentifier) {\n        case 'view-maps':\n          if (data.mapsUrl) {\n            await Linking.openURL(data.mapsUrl);\n          }\n          break;\n        case 'view-appointment':\n          // Navigation vers les d√©tails du rendez-vous\n          // Cette logique sera impl√©ment√©e selon votre syst√®me de navigation\n          console.log('Navigation vers RDV:', data.appointmentId);\n          break;\n        default:\n          // Clic par d√©faut sur la notification\n          if (data.mapsUrl) {\n            await Linking.openURL(data.mapsUrl);\n          }\n          break;\n      }\n    }\n\n    /**\n     * Programmer une notification locale de test\n     */\n    async scheduleTestNotification(seconds = 5) {\n      try {\n        await Notifications.scheduleNotificationAsync({\n          content: {\n            title: 'Test DOKTA ü©∫',\n            body: 'Votre rendez-vous dans 1 heure',\n            data: {\n              appointmentId: 'test-123',\n              appointmentType: 'cabinet',\n              doctorName: 'Dr Mbarga',\n              mapsUrl: 'https://maps.google.com/?q=Yaound√©,Cameroon'\n            },\n            categoryIdentifier: 'appointment-reminder',\n            sound: 'default'\n          },\n          trigger: {\n            seconds: seconds\n          }\n        });\n        console.log(`Notification de test programm√©e dans ${seconds} secondes`);\n      } catch (error) {\n        console.error('Erreur programmation notification test:', error);\n      }\n    }\n\n    /**\n     * Annuler toutes les notifications programm√©es\n     */\n    async cancelAllScheduledNotifications() {\n      await Notifications.cancelAllScheduledNotificationsAsync();\n      console.log('Toutes les notifications programm√©es ont √©t√© annul√©es');\n    }\n\n    /**\n     * Obtenir le nombre de notifications en attente\n     */\n    async getPendingNotificationsCount() {\n      const notifications = await Notifications.getAllScheduledNotificationsAsync();\n      return notifications.length;\n    }\n  }\n  var _default = new NotificationService();\n});","lineCount":246,"map":[[27,2,224,0,"Object"],[27,8,224,0],[27,9,224,0,"defineProperty"],[27,23,224,0],[27,24,224,0,"exports"],[27,31,224,0],[28,4,224,0,"enumerable"],[28,14,224,0],[29,4,224,0,"get"],[29,7,224,0],[29,18,224,0,"get"],[29,19,224,0],[30,6,224,0],[30,13,224,0,"_default"],[30,21,224,0],[31,4,224,0],[32,2,224,0],[33,2,1,0],[33,6,1,0,"_expoNotifications"],[33,24,1,0],[33,27,1,0,"require"],[33,34,1,0],[33,35,1,0,"_dependencyMap"],[33,49,1,0],[34,2,1,0],[34,6,1,0,"Notifications"],[34,19,1,0],[34,22,1,0,"_interopNamespace"],[34,39,1,0],[34,40,1,0,"_expoNotifications"],[34,58,1,0],[35,2,2,0],[35,6,2,0,"_expoDevice"],[35,17,2,0],[35,20,2,0,"require"],[35,27,2,0],[35,28,2,0,"_dependencyMap"],[35,42,2,0],[36,2,2,0],[36,6,2,0,"Device"],[36,12,2,0],[36,15,2,0,"_interopNamespace"],[36,32,2,0],[36,33,2,0,"_expoDevice"],[36,44,2,0],[37,2,3,0],[37,6,3,0,"_expoConstants"],[37,20,3,0],[37,23,3,0,"require"],[37,30,3,0],[37,31,3,0,"_dependencyMap"],[37,45,3,0],[38,2,3,0],[38,6,3,0,"Constants"],[38,15,3,0],[38,18,3,0,"_interopDefault"],[38,33,3,0],[38,34,3,0,"_expoConstants"],[38,48,3,0],[39,2,3,39],[39,6,3,39,"_reactNativeWebDistExportsPlatform"],[39,40,3,39],[39,43,3,39,"require"],[39,50,3,39],[39,51,3,39,"_dependencyMap"],[39,65,3,39],[40,2,3,39],[40,6,3,39,"Platform"],[40,14,3,39],[40,17,3,39,"_interopDefault"],[40,32,3,39],[40,33,3,39,"_reactNativeWebDistExportsPlatform"],[40,67,3,39],[41,2,6,0],[42,2,7,0,"Notifications"],[42,15,7,13],[42,16,7,14,"setNotificationHandler"],[42,38,7,36],[42,39,7,37],[43,4,8,2,"handleNotification"],[43,22,8,20],[43,24,8,22],[43,30,8,22,"handleNotification"],[43,31,8,22],[43,37,8,35],[44,6,9,4,"shouldShowAlert"],[44,21,9,19],[44,23,9,21],[44,27,9,25],[45,6,10,4,"shouldPlaySound"],[45,21,10,19],[45,23,10,21],[45,27,10,25],[46,6,11,4,"shouldSetBadge"],[46,20,11,18],[46,22,11,20],[47,4,12,2],[47,5,12,3],[48,2,13,0],[48,3,13,1],[48,4,13,2],[49,2,26,0],[49,8,26,6,"NotificationService"],[49,27,26,25],[49,28,26,26],[50,4,27,10,"expoPushToken"],[50,17,27,23],[50,20,27,41],[50,24,27,45],[52,4,29,2],[53,0,30,0],[54,0,31,0],[55,4,32,2],[55,10,32,8,"registerForPushNotifications"],[55,38,32,36,"registerForPushNotifications"],[55,39,32,36],[55,41,32,63],[56,6,33,4],[56,10,33,8],[57,8,34,6],[57,12,34,10],[57,13,34,11,"Device"],[57,19,34,17],[57,20,34,18,"isDevice"],[57,28,34,26],[57,30,34,28],[58,10,35,8,"console"],[58,17,35,15],[58,18,35,16,"log"],[58,21,35,19],[58,22,35,20],[58,79,35,77],[58,80,35,78],[59,10,36,8],[59,17,36,15],[59,21,36,19],[60,8,37,6],[62,8,39,6],[63,8,40,6],[63,14,40,12],[64,10,40,14,"status"],[64,16,40,20],[64,18,40,22,"existingStatus"],[65,8,40,37],[65,9,40,38],[65,12,40,41],[65,18,40,47,"Notifications"],[65,31,40,60],[65,32,40,61,"getPermissionsAsync"],[65,51,40,80],[65,52,40,81],[65,53,40,82],[66,8,41,6],[66,12,41,10,"finalStatus"],[66,23,41,21],[66,26,41,24,"existingStatus"],[66,40,41,38],[68,8,43,6],[69,8,44,6],[69,12,44,10,"existingStatus"],[69,26,44,24],[69,31,44,29],[69,40,44,38],[69,42,44,40],[70,10,45,8],[70,16,45,14],[71,12,45,16,"status"],[72,10,45,23],[72,11,45,24],[72,14,45,27],[72,20,45,33,"Notifications"],[72,33,45,46],[72,34,45,47,"requestPermissionsAsync"],[72,57,45,70],[72,58,45,71],[72,59,45,72],[73,10,46,8,"finalStatus"],[73,21,46,19],[73,24,46,22,"status"],[73,30,46,28],[74,8,47,6],[75,8,49,6],[75,12,49,10,"finalStatus"],[75,23,49,21],[75,28,49,26],[75,37,49,35],[75,39,49,37],[76,10,50,8,"console"],[76,17,50,15],[76,18,50,16,"log"],[76,21,50,19],[76,22,50,20],[76,70,50,68],[76,71,50,69],[77,10,51,8],[77,17,51,15],[77,21,51,19],[78,8,52,6],[80,8,54,6],[81,8,55,6],[81,14,55,12,"tokenData"],[81,23,55,21],[81,26,55,24],[81,32,55,30,"Notifications"],[81,45,55,43],[81,46,55,44,"getExpoPushTokenAsync"],[81,67,55,65],[81,68,55,66],[82,10,56,8,"projectId"],[82,19,56,17],[82,21,56,19,"Constants"],[82,30,56,28],[82,31,56,28,"default"],[82,38,56,28],[82,39,56,29,"expoConfig"],[82,49,56,39],[82,51,56,41,"extra"],[82,56,56,46],[82,58,56,48,"eas"],[82,61,56,51],[82,63,56,53,"projectId"],[83,8,57,6],[83,9,57,7],[83,10,57,8],[84,8,59,6],[84,12,59,10],[84,13,59,11,"expoPushToken"],[84,26,59,24],[84,29,59,27,"tokenData"],[84,38,59,36],[84,39,59,37,"data"],[84,43,59,41],[85,8,60,6,"console"],[85,15,60,13],[85,16,60,14,"log"],[85,19,60,17],[85,20,60,18],[85,38,60,36],[85,40,60,38],[85,44,60,42],[85,45,60,43,"expoPushToken"],[85,58,60,56],[85,59,60,57],[87,8,62,6],[88,8,63,6],[88,14,63,12],[88,18,63,16],[88,19,63,17,"setupNotificationCategories"],[88,46,63,44],[88,47,63,45],[88,48,63,46],[89,8,65,6],[89,15,65,13],[89,19,65,17],[89,20,65,18,"expoPushToken"],[89,33,65,31],[90,6,66,4],[90,7,66,5],[90,8,66,6],[90,15,66,13,"error"],[90,20,66,18],[90,22,66,20],[91,8,67,6,"console"],[91,15,67,13],[91,16,67,14,"error"],[91,21,67,19],[91,22,67,20],[91,75,67,73],[91,77,67,75,"error"],[91,82,67,80],[91,83,67,81],[92,8,68,6],[92,15,68,13],[92,19,68,17],[93,6,69,4],[94,4,70,2],[96,4,72,2],[97,0,73,0],[98,0,74,0],[99,4,75,2],[99,10,75,16,"setupNotificationCategories"],[99,37,75,43,"setupNotificationCategories"],[99,38,75,43],[99,40,75,46],[100,6,76,4],[100,12,76,10,"Notifications"],[100,25,76,23],[100,26,76,24,"setNotificationCategoryAsync"],[100,54,76,52],[100,55,76,53],[100,77,76,75],[100,79,76,77],[100,80,77,6],[101,8,78,8,"identifier"],[101,18,78,18],[101,20,78,20],[101,31,78,31],[102,8,79,8,"buttonTitle"],[102,19,79,19],[102,21,79,21],[102,38,79,38],[103,8,80,8,"options"],[103,15,80,15],[103,17,80,17],[104,10,81,10,"foreground"],[104,20,81,20],[104,22,81,22],[105,8,82,8],[106,6,83,6],[106,7,83,7],[106,9,84,6],[107,8,85,8,"identifier"],[107,18,85,18],[107,20,85,20],[107,38,85,38],[108,8,86,8,"buttonTitle"],[108,19,86,19],[108,21,86,21],[108,31,86,31],[109,8,87,8,"options"],[109,15,87,15],[109,17,87,17],[110,10,88,10,"foreground"],[110,20,88,20],[110,22,88,22],[111,8,89,8],[112,6,90,6],[112,7,90,7],[112,8,91,5],[112,9,91,6],[113,4,92,2],[115,4,94,2],[116,0,95,0],[117,0,96,0],[118,4,97,2],[118,10,97,8,"registerTokenWithBackend"],[118,34,97,32,"registerTokenWithBackend"],[118,35,97,33,"userId"],[118,41,97,47],[118,43,97,49,"token"],[118,48,97,62],[118,50,97,82],[119,6,98,4],[119,10,98,8],[120,8,99,6],[120,14,99,12,"EXPO_BACKEND_URL"],[120,30,99,28],[120,33,99,31,"process"],[120,40,99,38],[120,41,99,39,"env"],[120,44,99,42],[120,45,99,43,"EXPO_PUBLIC_BACKEND_URL"],[120,68,99,66],[121,8,101,6],[121,14,101,12,"response"],[121,22,101,20],[121,25,101,23],[121,31,101,29,"fetch"],[121,36,101,34],[121,37,101,35],[121,40,101,38,"EXPO_BACKEND_URL"],[121,56,101,54],[121,91,101,89],[121,93,101,91],[122,10,102,8,"method"],[122,16,102,14],[122,18,102,16],[122,24,102,22],[123,10,103,8,"headers"],[123,17,103,15],[123,19,103,17],[124,12,104,10],[124,26,104,24],[124,28,104,26],[125,10,105,8],[125,11,105,9],[126,10,106,8,"body"],[126,14,106,12],[126,16,106,14,"JSON"],[126,20,106,18],[126,21,106,19,"stringify"],[126,30,106,28],[126,31,106,29],[127,12,107,10,"user_id"],[127,19,107,17],[127,21,107,19,"userId"],[127,27,107,25],[128,12,108,10,"expo_token"],[128,22,108,20],[128,24,108,22,"token"],[128,29,108,27],[129,12,109,10,"device_info"],[129,23,109,21],[129,25,109,23],[130,14,110,12,"platform"],[130,22,110,20],[130,24,110,22,"Platform"],[130,32,110,30],[130,33,110,30,"default"],[130,40,110,30],[130,41,110,31,"OS"],[130,43,110,33],[131,14,111,12,"deviceName"],[131,24,111,22],[131,26,111,24,"Device"],[131,32,111,30],[131,33,111,31,"deviceName"],[131,43,111,41],[132,14,112,12,"osVersion"],[132,23,112,21],[132,25,112,23,"Device"],[132,31,112,29],[132,32,112,30,"osVersion"],[133,12,113,10],[134,10,114,8],[134,11,114,9],[135,8,115,6],[135,9,115,7],[135,10,115,8],[136,8,117,6],[136,12,117,10,"response"],[136,20,117,18],[136,21,117,19,"ok"],[136,23,117,21],[136,25,117,23],[137,10,118,8,"console"],[137,17,118,15],[137,18,118,16,"log"],[137,21,118,19],[137,22,118,20],[137,67,118,65],[137,68,118,66],[138,10,119,8],[138,17,119,15],[138,21,119,19],[139,8,120,6],[139,9,120,7],[139,15,120,13],[140,10,121,8,"console"],[140,17,121,15],[140,18,121,16,"error"],[140,23,121,21],[140,24,121,22],[140,68,121,66],[140,70,121,68],[140,76,121,74,"response"],[140,84,121,82],[140,85,121,83,"text"],[140,89,121,87],[140,90,121,88],[140,91,121,89],[140,92,121,90],[141,10,122,8],[141,17,122,15],[141,22,122,20],[142,8,123,6],[143,6,124,4],[143,7,124,5],[143,8,124,6],[143,15,124,13,"error"],[143,20,124,18],[143,22,124,20],[144,8,125,6,"console"],[144,15,125,13],[144,16,125,14,"error"],[144,21,125,19],[144,22,125,20],[144,73,125,71],[144,75,125,73,"error"],[144,80,125,78],[144,81,125,79],[145,8,126,6],[145,15,126,13],[145,20,126,18],[146,6,127,4],[147,4,128,2],[149,4,130,2],[150,0,131,0],[151,0,132,0],[152,4,133,2,"setupNotificationHandlers"],[152,29,133,27,"setupNotificationHandlers"],[152,30,133,27],[152,32,133,30],[153,6,134,4],[154,6,135,4,"Notifications"],[154,19,135,17],[154,20,135,18,"addNotificationReceivedListener"],[154,51,135,49],[154,52,135,50,"notification"],[154,64,135,62],[154,68,135,66],[155,8,136,6,"console"],[155,15,136,13],[155,16,136,14,"log"],[155,19,136,17],[155,20,136,18],[155,41,136,39],[155,43,136,41,"notification"],[155,55,136,53],[155,56,136,54],[156,6,137,4],[156,7,137,5],[156,8,137,6],[158,6,139,4],[159,6,140,4,"Notifications"],[159,19,140,17],[159,20,140,18,"addNotificationResponseReceivedListener"],[159,59,140,57],[159,60,140,58,"response"],[159,68,140,66],[159,72,140,70],[160,8,141,6],[160,14,141,12],[161,10,141,14,"data"],[162,8,141,19],[162,9,141,20],[162,12,141,23,"response"],[162,20,141,31],[162,21,141,32,"notification"],[162,33,141,44],[162,34,141,45,"request"],[162,41,141,52],[162,42,141,53,"content"],[162,49,141,60],[163,8,142,6],[163,14,142,12],[164,10,142,14,"actionIdentifier"],[165,8,142,31],[165,9,142,32],[165,12,142,35,"response"],[165,20,142,43],[166,8,144,6,"console"],[166,15,144,13],[166,16,144,14,"log"],[166,19,144,17],[166,20,144,18],[166,43,144,41],[166,45,144,43],[167,10,144,45,"data"],[167,14,144,49],[168,10,144,51,"actionIdentifier"],[169,8,144,68],[169,9,144,69],[169,10,144,70],[170,8,146,6],[170,12,146,10],[170,13,146,11,"handleNotificationResponse"],[170,39,146,37],[170,40,146,38,"data"],[170,44,146,42],[170,46,146,64,"actionIdentifier"],[170,62,146,80],[170,63,146,81],[171,6,147,4],[171,7,147,5],[171,8,147,6],[172,4,148,2],[174,4,150,2],[175,0,151,0],[176,0,152,0],[177,4,153,2],[177,10,153,16,"handleNotificationResponse"],[177,36,153,42,"handleNotificationResponse"],[177,37,153,43,"data"],[177,41,153,65],[177,43,153,67,"actionIdentifier"],[177,59,153,91],[177,61,153,93],[178,6,154,4],[178,12,154,10],[179,8,154,12,"Linking"],[180,6,154,20],[180,7,154,21],[180,10,154,24,"require"],[180,17,154,31],[180,18,154,31,"_dependencyMap"],[180,32,154,31],[180,51,154,46],[180,52,154,47],[181,6,156,4],[181,14,156,12,"actionIdentifier"],[181,30,156,28],[182,8,157,6],[182,13,157,11],[182,24,157,22],[183,10,158,8],[183,14,158,12,"data"],[183,18,158,16],[183,19,158,17,"mapsUrl"],[183,26,158,24],[183,28,158,26],[184,12,159,10],[184,18,159,16,"Linking"],[184,25,159,23],[184,26,159,24,"openURL"],[184,33,159,31],[184,34,159,32,"data"],[184,38,159,36],[184,39,159,37,"mapsUrl"],[184,46,159,44],[184,47,159,45],[185,10,160,8],[186,10,161,8],[187,8,163,6],[187,13,163,11],[187,31,163,29],[188,10,164,8],[189,10,165,8],[190,10,166,8,"console"],[190,17,166,15],[190,18,166,16,"log"],[190,21,166,19],[190,22,166,20],[190,44,166,42],[190,46,166,44,"data"],[190,50,166,48],[190,51,166,49,"appointmentId"],[190,64,166,62],[190,65,166,63],[191,10,167,8],[192,8,169,6],[193,10,170,8],[194,10,171,8],[194,14,171,12,"data"],[194,18,171,16],[194,19,171,17,"mapsUrl"],[194,26,171,24],[194,28,171,26],[195,12,172,10],[195,18,172,16,"Linking"],[195,25,172,23],[195,26,172,24,"openURL"],[195,33,172,31],[195,34,172,32,"data"],[195,38,172,36],[195,39,172,37,"mapsUrl"],[195,46,172,44],[195,47,172,45],[196,10,173,8],[197,10,174,8],[198,6,175,4],[199,4,176,2],[201,4,178,2],[202,0,179,0],[203,0,180,0],[204,4,181,2],[204,10,181,8,"scheduleTestNotification"],[204,34,181,32,"scheduleTestNotification"],[204,35,181,33,"seconds"],[204,42,181,48],[204,45,181,51],[204,46,181,52],[204,48,181,54],[205,6,182,4],[205,10,182,8],[206,8,183,6],[206,14,183,12,"Notifications"],[206,27,183,25],[206,28,183,26,"scheduleNotificationAsync"],[206,53,183,51],[206,54,183,52],[207,10,184,8,"content"],[207,17,184,15],[207,19,184,17],[208,12,185,10,"title"],[208,17,185,15],[208,19,185,17],[208,34,185,32],[209,12,186,10,"body"],[209,16,186,14],[209,18,186,16],[209,50,186,48],[210,12,187,10,"data"],[210,16,187,14],[210,18,187,16],[211,14,188,12,"appointmentId"],[211,27,188,25],[211,29,188,27],[211,39,188,37],[212,14,189,12,"appointmentType"],[212,29,189,27],[212,31,189,29],[212,40,189,38],[213,14,190,12,"doctorName"],[213,24,190,22],[213,26,190,24],[213,37,190,35],[214,14,191,12,"mapsUrl"],[214,21,191,19],[214,23,191,21],[215,12,192,10],[215,13,192,11],[216,12,193,10,"categoryIdentifier"],[216,30,193,28],[216,32,193,30],[216,54,193,52],[217,12,194,10,"sound"],[217,17,194,15],[217,19,194,17],[218,10,195,8],[218,11,195,9],[219,10,196,8,"trigger"],[219,17,196,15],[219,19,196,17],[220,12,197,10,"seconds"],[220,19,197,17],[220,21,197,19,"seconds"],[221,10,198,8],[222,8,199,6],[222,9,199,7],[222,10,199,8],[223,8,201,6,"console"],[223,15,201,13],[223,16,201,14,"log"],[223,19,201,17],[223,20,201,18],[223,60,201,58,"seconds"],[223,67,201,65],[223,78,201,76],[223,79,201,77],[224,6,202,4],[224,7,202,5],[224,8,202,6],[224,15,202,13,"error"],[224,20,202,18],[224,22,202,20],[225,8,203,6,"console"],[225,15,203,13],[225,16,203,14,"error"],[225,21,203,19],[225,22,203,20],[225,63,203,61],[225,65,203,63,"error"],[225,70,203,68],[225,71,203,69],[226,6,204,4],[227,4,205,2],[229,4,207,2],[230,0,208,0],[231,0,209,0],[232,4,210,2],[232,10,210,8,"cancelAllScheduledNotifications"],[232,41,210,39,"cancelAllScheduledNotifications"],[232,42,210,39],[232,44,210,42],[233,6,211,4],[233,12,211,10,"Notifications"],[233,25,211,23],[233,26,211,24,"cancelAllScheduledNotificationsAsync"],[233,62,211,60],[233,63,211,61],[233,64,211,62],[234,6,212,4,"console"],[234,13,212,11],[234,14,212,12,"log"],[234,17,212,15],[234,18,212,16],[234,73,212,71],[234,74,212,72],[235,4,213,2],[237,4,215,2],[238,0,216,0],[239,0,217,0],[240,4,218,2],[240,10,218,8,"getPendingNotificationsCount"],[240,38,218,36,"getPendingNotificationsCount"],[240,39,218,36],[240,41,218,56],[241,6,219,4],[241,12,219,10,"notifications"],[241,25,219,23],[241,28,219,26],[241,34,219,32,"Notifications"],[241,47,219,45],[241,48,219,46,"getAllScheduledNotificationsAsync"],[241,81,219,79],[241,82,219,80],[241,83,219,81],[242,6,220,4],[242,13,220,11,"notifications"],[242,26,220,24],[242,27,220,25,"length"],[242,33,220,31],[243,4,221,2],[244,2,222,0],[245,2,224,0],[245,6,224,0,"_default"],[245,14,224,0],[245,17,224,15],[245,21,224,19,"NotificationService"],[245,40,224,38],[245,41,224,39],[245,42,224,40],[246,0,224,41],[246,3]],"functionMap":{"names":["<global>","Notifications.setNotificationHandler$argument_0.handleNotification","NotificationService","NotificationService#registerForPushNotifications","NotificationService#setupNotificationCategories","NotificationService#registerTokenWithBackend","NotificationService#setupNotificationHandlers","Notifications.addNotificationReceivedListener$argument_0","Notifications.addNotificationResponseReceivedListener$argument_0","NotificationService#handleNotificationResponse","NotificationService#scheduleTestNotification","NotificationService#cancelAllScheduledNotifications","NotificationService#getPendingNotificationsCount"],"mappings":"AAA;sBCO;IDI;AEc;ECM;GDsC;EEK;GFiB;EGK;GH+B;EIK;kDCE;KDE;0DEG;KFO;GJC;EOK;GPuB;EQK;GRwB;ESK;GTG;EUK;GVG;CFC"},"hasCjsExports":false},"type":"js/module"}]}