{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"],"imports":1}},{"name":"expo-device","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":53},"end":{"line":2,"column":38,"index":91}}],"key":"bBpmAhO1g++sdeUzQmFVGoQIVwg=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":92},"end":{"line":3,"column":39,"index":131}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":132},"end":{"line":4,"column":40,"index":172}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"expo-linking","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":154,"column":24,"index":4477},"end":{"line":154,"column":47,"index":4500}}],"key":"F3IRuZxT1cyHB74rJR7WrB3Q6GA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoNotifications = require(_dependencyMap[4], \"expo-notifications\");\n  var Notifications = _interopNamespace(_expoNotifications);\n  var _expoDevice = require(_dependencyMap[5], \"expo-device\");\n  var Device = _interopNamespace(_expoDevice);\n  var _expoConstants = require(_dependencyMap[6], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  // Configuration du comportement des notifications\n  Notifications.setNotificationHandler({\n    handleNotification: function () {\n      var _ref = (0, _asyncToGenerator.default)(function* () {\n        return {\n          shouldShowAlert: true,\n          shouldPlaySound: true,\n          shouldSetBadge: true\n        };\n      });\n      return function handleNotification() {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  });\n  var NotificationService = /*#__PURE__*/function () {\n    function NotificationService() {\n      (0, _classCallCheck.default)(this, NotificationService);\n      this.expoPushToken = null;\n    }\n    return (0, _createClass.default)(NotificationService, [{\n      key: \"registerForPushNotifications\",\n      value: (\n      /**\n       * Enregistrer l'appareil pour les notifications push\n       */\n      function () {\n        var _registerForPushNotifications = (0, _asyncToGenerator.default)(function* () {\n          try {\n            if (!Device.isDevice) {\n              console.log('Les notifications push nécessitent un appareil physique');\n              return null;\n            }\n\n            // Vérifier les permissions existantes\n            var _yield$Notifications$ = yield Notifications.getPermissionsAsync(),\n              existingStatus = _yield$Notifications$.status;\n            var finalStatus = existingStatus;\n\n            // Demander les permissions si nécessaires\n            if (existingStatus !== 'granted') {\n              var _yield$Notifications$2 = yield Notifications.requestPermissionsAsync(),\n                status = _yield$Notifications$2.status;\n              finalStatus = status;\n            }\n            if (finalStatus !== 'granted') {\n              console.log('Permission refusée pour les notifications push');\n              return null;\n            }\n\n            // Obtenir le token Expo\n            var tokenData = yield Notifications.getExpoPushTokenAsync({\n              projectId: Constants.default.expoConfig?.extra?.eas?.projectId\n            });\n            this.expoPushToken = tokenData.data;\n            console.log('Token push Expo:', this.expoPushToken);\n\n            // Configurer les catégories de notifications\n            yield this.setupNotificationCategories();\n            return this.expoPushToken;\n          } catch (error) {\n            console.error('Erreur lors de l\\'enregistrement des notifications:', error);\n            return null;\n          }\n        });\n        function registerForPushNotifications() {\n          return _registerForPushNotifications.apply(this, arguments);\n        }\n        return registerForPushNotifications;\n      }()\n      /**\n       * Configurer les catégories de notifications avec actions\n       */\n      )\n    }, {\n      key: \"setupNotificationCategories\",\n      value: (function () {\n        var _setupNotificationCategories = (0, _asyncToGenerator.default)(function* () {\n          yield Notifications.setNotificationCategoryAsync('appointment-reminder', [{\n            identifier: 'view-maps',\n            buttonTitle: 'Voir itinéraire',\n            options: {\n              foreground: true\n            }\n          }, {\n            identifier: 'view-appointment',\n            buttonTitle: 'Voir RDV',\n            options: {\n              foreground: true\n            }\n          }]);\n        });\n        function setupNotificationCategories() {\n          return _setupNotificationCategories.apply(this, arguments);\n        }\n        return setupNotificationCategories;\n      }()\n      /**\n       * Enregistrer le token sur le serveur backend\n       */\n      )\n    }, {\n      key: \"registerTokenWithBackend\",\n      value: (function () {\n        var _registerTokenWithBackend = (0, _asyncToGenerator.default)(function* (userId, token) {\n          try {\n            var EXPO_BACKEND_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL;\n            var response = yield fetch(`${EXPO_BACKEND_URL}/api/notifications/register-token`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                user_id: userId,\n                expo_token: token,\n                device_info: {\n                  platform: _reactNative.Platform.OS,\n                  deviceName: Device.deviceName,\n                  osVersion: Device.osVersion\n                }\n              })\n            });\n            if (response.ok) {\n              console.log('Token enregistré avec succès sur le serveur');\n              return true;\n            } else {\n              console.error('Erreur lors de l\\'enregistrement du token:', yield response.text());\n              return false;\n            }\n          } catch (error) {\n            console.error('Erreur réseau lors de l\\'enregistrement du token:', error);\n            return false;\n          }\n        });\n        function registerTokenWithBackend(_x, _x2) {\n          return _registerTokenWithBackend.apply(this, arguments);\n        }\n        return registerTokenWithBackend;\n      }()\n      /**\n       * Configurer les gestionnaires de notifications\n       */\n      )\n    }, {\n      key: \"setupNotificationHandlers\",\n      value: function setupNotificationHandlers() {\n        // Notification reçue en premier plan\n        Notifications.addNotificationReceivedListener(notification => {\n          console.log('Notification reçue:', notification);\n        });\n\n        // Réponse à une notification (clic utilisateur)\n        Notifications.addNotificationResponseReceivedListener(response => {\n          var data = response.notification.request.content.data;\n          var actionIdentifier = response.actionIdentifier;\n          console.log('Réponse notification:', {\n            data,\n            actionIdentifier\n          });\n          this.handleNotificationResponse(data, actionIdentifier);\n        });\n      }\n\n      /**\n       * Gérer les réponses aux notifications\n       */\n    }, {\n      key: \"handleNotificationResponse\",\n      value: (function () {\n        var _handleNotificationResponse = (0, _asyncToGenerator.default)(function* (data, actionIdentifier) {\n          var _require = require(_dependencyMap[8], \"expo-linking\"),\n            Linking = _require.Linking;\n          switch (actionIdentifier) {\n            case 'view-maps':\n              if (data.mapsUrl) {\n                yield Linking.openURL(data.mapsUrl);\n              }\n              break;\n            case 'view-appointment':\n              // Navigation vers les détails du rendez-vous\n              // Cette logique sera implémentée selon votre système de navigation\n              console.log('Navigation vers RDV:', data.appointmentId);\n              break;\n            default:\n              // Clic par défaut sur la notification\n              if (data.mapsUrl) {\n                yield Linking.openURL(data.mapsUrl);\n              }\n              break;\n          }\n        });\n        function handleNotificationResponse(_x3, _x4) {\n          return _handleNotificationResponse.apply(this, arguments);\n        }\n        return handleNotificationResponse;\n      }()\n      /**\n       * Programmer une notification locale de test\n       */\n      )\n    }, {\n      key: \"scheduleTestNotification\",\n      value: (function () {\n        var _scheduleTestNotification = (0, _asyncToGenerator.default)(function* () {\n          var seconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n          try {\n            yield Notifications.scheduleNotificationAsync({\n              content: {\n                title: 'Test DOKTA 🩺',\n                body: 'Votre rendez-vous dans 1 heure',\n                data: {\n                  appointmentId: 'test-123',\n                  appointmentType: 'cabinet',\n                  doctorName: 'Dr Mbarga',\n                  mapsUrl: 'https://maps.google.com/?q=Yaoundé,Cameroon'\n                },\n                categoryIdentifier: 'appointment-reminder',\n                sound: 'default'\n              },\n              trigger: {\n                seconds: seconds\n              }\n            });\n            console.log(`Notification de test programmée dans ${seconds} secondes`);\n          } catch (error) {\n            console.error('Erreur programmation notification test:', error);\n          }\n        });\n        function scheduleTestNotification() {\n          return _scheduleTestNotification.apply(this, arguments);\n        }\n        return scheduleTestNotification;\n      }()\n      /**\n       * Annuler toutes les notifications programmées\n       */\n      )\n    }, {\n      key: \"cancelAllScheduledNotifications\",\n      value: (function () {\n        var _cancelAllScheduledNotifications = (0, _asyncToGenerator.default)(function* () {\n          yield Notifications.cancelAllScheduledNotificationsAsync();\n          console.log('Toutes les notifications programmées ont été annulées');\n        });\n        function cancelAllScheduledNotifications() {\n          return _cancelAllScheduledNotifications.apply(this, arguments);\n        }\n        return cancelAllScheduledNotifications;\n      }()\n      /**\n       * Obtenir le nombre de notifications en attente\n       */\n      )\n    }, {\n      key: \"getPendingNotificationsCount\",\n      value: (function () {\n        var _getPendingNotificationsCount = (0, _asyncToGenerator.default)(function* () {\n          var notifications = yield Notifications.getAllScheduledNotificationsAsync();\n          return notifications.length;\n        });\n        function getPendingNotificationsCount() {\n          return _getPendingNotificationsCount.apply(this, arguments);\n        }\n        return getPendingNotificationsCount;\n      }())\n    }]);\n  }();\n  var _default = new NotificationService();\n});","lineCount":315,"map":[[27,2,224,0,"Object"],[27,8,224,0],[27,9,224,0,"defineProperty"],[27,23,224,0],[27,24,224,0,"exports"],[27,31,224,0],[28,4,224,0,"enumerable"],[28,14,224,0],[29,4,224,0,"get"],[29,7,224,0],[29,18,224,0,"get"],[29,19,224,0],[30,6,224,0],[30,13,224,0,"_default"],[30,21,224,0],[31,4,224,0],[32,2,224,0],[33,2,224,41],[33,6,224,41,"_expoVirtualEnv"],[33,21,224,41],[33,24,224,41,"require"],[33,31,224,41],[33,32,224,41,"_dependencyMap"],[33,46,224,41],[34,2,224,41],[34,6,224,41,"_babelRuntimeHelpersClassCallCheck"],[34,40,224,41],[34,43,224,41,"require"],[34,50,224,41],[34,51,224,41,"_dependencyMap"],[34,65,224,41],[35,2,224,41],[35,6,224,41,"_classCallCheck"],[35,21,224,41],[35,24,224,41,"_interopDefault"],[35,39,224,41],[35,40,224,41,"_babelRuntimeHelpersClassCallCheck"],[35,74,224,41],[36,2,224,41],[36,6,224,41,"_babelRuntimeHelpersCreateClass"],[36,37,224,41],[36,40,224,41,"require"],[36,47,224,41],[36,48,224,41,"_dependencyMap"],[36,62,224,41],[37,2,224,41],[37,6,224,41,"_createClass"],[37,18,224,41],[37,21,224,41,"_interopDefault"],[37,36,224,41],[37,37,224,41,"_babelRuntimeHelpersCreateClass"],[37,68,224,41],[38,2,224,41],[38,6,224,41,"_babelRuntimeHelpersAsyncToGenerator"],[38,42,224,41],[38,45,224,41,"require"],[38,52,224,41],[38,53,224,41,"_dependencyMap"],[38,67,224,41],[39,2,224,41],[39,6,224,41,"_asyncToGenerator"],[39,23,224,41],[39,26,224,41,"_interopDefault"],[39,41,224,41],[39,42,224,41,"_babelRuntimeHelpersAsyncToGenerator"],[39,78,224,41],[40,2,1,0],[40,6,1,0,"_expoNotifications"],[40,24,1,0],[40,27,1,0,"require"],[40,34,1,0],[40,35,1,0,"_dependencyMap"],[40,49,1,0],[41,2,1,0],[41,6,1,0,"Notifications"],[41,19,1,0],[41,22,1,0,"_interopNamespace"],[41,39,1,0],[41,40,1,0,"_expoNotifications"],[41,58,1,0],[42,2,2,0],[42,6,2,0,"_expoDevice"],[42,17,2,0],[42,20,2,0,"require"],[42,27,2,0],[42,28,2,0,"_dependencyMap"],[42,42,2,0],[43,2,2,0],[43,6,2,0,"Device"],[43,12,2,0],[43,15,2,0,"_interopNamespace"],[43,32,2,0],[43,33,2,0,"_expoDevice"],[43,44,2,0],[44,2,3,0],[44,6,3,0,"_expoConstants"],[44,20,3,0],[44,23,3,0,"require"],[44,30,3,0],[44,31,3,0,"_dependencyMap"],[44,45,3,0],[45,2,3,0],[45,6,3,0,"Constants"],[45,15,3,0],[45,18,3,0,"_interopDefault"],[45,33,3,0],[45,34,3,0,"_expoConstants"],[45,48,3,0],[46,2,4,0],[46,6,4,0,"_reactNative"],[46,18,4,0],[46,21,4,0,"require"],[46,28,4,0],[46,29,4,0,"_dependencyMap"],[46,43,4,0],[47,2,6,0],[48,2,7,0,"Notifications"],[48,15,7,13],[48,16,7,14,"setNotificationHandler"],[48,38,7,36],[48,39,7,37],[49,4,8,2,"handleNotification"],[49,22,8,20],[50,6,8,20],[50,10,8,20,"_ref"],[50,14,8,20],[50,21,8,20,"_asyncToGenerator"],[50,38,8,20],[50,39,8,20,"default"],[50,46,8,20],[50,48,8,22],[51,8,8,22],[51,15,8,35],[52,10,9,4,"shouldShowAlert"],[52,25,9,19],[52,27,9,21],[52,31,9,25],[53,10,10,4,"shouldPlaySound"],[53,25,10,19],[53,27,10,21],[53,31,10,25],[54,10,11,4,"shouldSetBadge"],[54,24,11,18],[54,26,11,20],[55,8,12,2],[55,9,12,3],[56,6,12,3],[56,7,12,4],[57,6,12,4],[57,22,8,2,"handleNotification"],[57,40,8,20,"handleNotification"],[57,41,8,20],[58,8,8,20],[58,15,8,20,"_ref"],[58,19,8,20],[58,20,8,20,"apply"],[58,25,8,20],[58,32,8,20,"arguments"],[58,41,8,20],[59,6,8,20],[60,4,8,20],[61,2,13,0],[61,3,13,1],[61,4,13,2],[62,2,13,3],[62,6,26,6,"NotificationService"],[62,25,26,25],[63,4,26,25],[63,13,26,25,"NotificationService"],[63,33,26,25],[64,6,26,25],[64,10,26,25,"_classCallCheck"],[64,25,26,25],[64,26,26,25,"default"],[64,33,26,25],[64,41,26,25,"NotificationService"],[64,60,26,25],[65,6,26,25],[65,11,27,10,"expoPushToken"],[65,24,27,23],[65,27,27,41],[65,31,27,45],[66,4,27,45],[67,4,27,45],[67,15,27,45,"_createClass"],[67,27,27,45],[67,28,27,45,"default"],[67,35,27,45],[67,37,27,45,"NotificationService"],[67,56,27,45],[68,6,27,45,"key"],[68,9,27,45],[69,6,27,45,"value"],[69,11,27,45],[70,6,29,2],[71,0,30,0],[72,0,31,0],[73,6,29,2],[74,8,29,2],[74,12,29,2,"_registerForPushNotifications"],[74,41,29,2],[74,48,29,2,"_asyncToGenerator"],[74,65,29,2],[74,66,29,2,"default"],[74,73,29,2],[74,75,32,2],[74,88,32,63],[75,10,33,4],[75,14,33,8],[76,12,34,6],[76,16,34,10],[76,17,34,11,"Device"],[76,23,34,17],[76,24,34,18,"isDevice"],[76,32,34,26],[76,34,34,28],[77,14,35,8,"console"],[77,21,35,15],[77,22,35,16,"log"],[77,25,35,19],[77,26,35,20],[77,83,35,77],[77,84,35,78],[78,14,36,8],[78,21,36,15],[78,25,36,19],[79,12,37,6],[81,12,39,6],[82,12,40,6],[82,16,40,6,"_yield$Notifications$"],[82,37,40,6],[82,46,40,47,"Notifications"],[82,59,40,60],[82,60,40,61,"getPermissionsAsync"],[82,79,40,80],[82,80,40,81],[82,81,40,82],[83,14,40,22,"existingStatus"],[83,28,40,36],[83,31,40,36,"_yield$Notifications$"],[83,52,40,36],[83,53,40,14,"status"],[83,59,40,20],[84,12,41,6],[84,16,41,10,"finalStatus"],[84,27,41,21],[84,30,41,24,"existingStatus"],[84,44,41,38],[86,12,43,6],[87,12,44,6],[87,16,44,10,"existingStatus"],[87,30,44,24],[87,35,44,29],[87,44,44,38],[87,46,44,40],[88,14,45,8],[88,18,45,8,"_yield$Notifications$2"],[88,40,45,8],[88,49,45,33,"Notifications"],[88,62,45,46],[88,63,45,47,"requestPermissionsAsync"],[88,86,45,70],[88,87,45,71],[88,88,45,72],[89,16,45,16,"status"],[89,22,45,22],[89,25,45,22,"_yield$Notifications$2"],[89,47,45,22],[89,48,45,16,"status"],[89,54,45,22],[90,14,46,8,"finalStatus"],[90,25,46,19],[90,28,46,22,"status"],[90,34,46,28],[91,12,47,6],[92,12,49,6],[92,16,49,10,"finalStatus"],[92,27,49,21],[92,32,49,26],[92,41,49,35],[92,43,49,37],[93,14,50,8,"console"],[93,21,50,15],[93,22,50,16,"log"],[93,25,50,19],[93,26,50,20],[93,74,50,68],[93,75,50,69],[94,14,51,8],[94,21,51,15],[94,25,51,19],[95,12,52,6],[97,12,54,6],[98,12,55,6],[98,16,55,12,"tokenData"],[98,25,55,21],[98,34,55,30,"Notifications"],[98,47,55,43],[98,48,55,44,"getExpoPushTokenAsync"],[98,69,55,65],[98,70,55,66],[99,14,56,8,"projectId"],[99,23,56,17],[99,25,56,19,"Constants"],[99,34,56,28],[99,35,56,28,"default"],[99,42,56,28],[99,43,56,29,"expoConfig"],[99,53,56,39],[99,55,56,41,"extra"],[99,60,56,46],[99,62,56,48,"eas"],[99,65,56,51],[99,67,56,53,"projectId"],[100,12,57,6],[100,13,57,7],[100,14,57,8],[101,12,59,6],[101,16,59,10],[101,17,59,11,"expoPushToken"],[101,30,59,24],[101,33,59,27,"tokenData"],[101,42,59,36],[101,43,59,37,"data"],[101,47,59,41],[102,12,60,6,"console"],[102,19,60,13],[102,20,60,14,"log"],[102,23,60,17],[102,24,60,18],[102,42,60,36],[102,44,60,38],[102,48,60,42],[102,49,60,43,"expoPushToken"],[102,62,60,56],[102,63,60,57],[104,12,62,6],[105,12,63,6],[105,18,63,12],[105,22,63,16],[105,23,63,17,"setupNotificationCategories"],[105,50,63,44],[105,51,63,45],[105,52,63,46],[106,12,65,6],[106,19,65,13],[106,23,65,17],[106,24,65,18,"expoPushToken"],[106,37,65,31],[107,10,66,4],[107,11,66,5],[107,12,66,6],[107,19,66,13,"error"],[107,24,66,18],[107,26,66,20],[108,12,67,6,"console"],[108,19,67,13],[108,20,67,14,"error"],[108,25,67,19],[108,26,67,20],[108,79,67,73],[108,81,67,75,"error"],[108,86,67,80],[108,87,67,81],[109,12,68,6],[109,19,68,13],[109,23,68,17],[110,10,69,4],[111,8,70,2],[111,9,70,3],[112,8,70,3],[112,17,32,8,"registerForPushNotifications"],[112,45,32,36,"registerForPushNotifications"],[112,46,32,36],[113,10,32,36],[113,17,32,36,"_registerForPushNotifications"],[113,46,32,36],[113,47,32,36,"apply"],[113,52,32,36],[113,59,32,36,"arguments"],[113,68,32,36],[114,8,32,36],[115,8,32,36],[115,15,32,8,"registerForPushNotifications"],[115,43,32,36],[116,6,32,36],[117,6,72,2],[118,0,73,0],[119,0,74,0],[120,6,72,2],[121,4,72,2],[122,6,72,2,"key"],[122,9,72,2],[123,6,72,2,"value"],[123,11,72,2],[124,8,72,2],[124,12,72,2,"_setupNotificationCategories"],[124,40,72,2],[124,47,72,2,"_asyncToGenerator"],[124,64,72,2],[124,65,72,2,"default"],[124,72,72,2],[124,74,75,2],[124,87,75,46],[125,10,76,4],[125,16,76,10,"Notifications"],[125,29,76,23],[125,30,76,24,"setNotificationCategoryAsync"],[125,58,76,52],[125,59,76,53],[125,81,76,75],[125,83,76,77],[125,84,77,6],[126,12,78,8,"identifier"],[126,22,78,18],[126,24,78,20],[126,35,78,31],[127,12,79,8,"buttonTitle"],[127,23,79,19],[127,25,79,21],[127,42,79,38],[128,12,80,8,"options"],[128,19,80,15],[128,21,80,17],[129,14,81,10,"foreground"],[129,24,81,20],[129,26,81,22],[130,12,82,8],[131,10,83,6],[131,11,83,7],[131,13,84,6],[132,12,85,8,"identifier"],[132,22,85,18],[132,24,85,20],[132,42,85,38],[133,12,86,8,"buttonTitle"],[133,23,86,19],[133,25,86,21],[133,35,86,31],[134,12,87,8,"options"],[134,19,87,15],[134,21,87,17],[135,14,88,10,"foreground"],[135,24,88,20],[135,26,88,22],[136,12,89,8],[137,10,90,6],[137,11,90,7],[137,12,91,5],[137,13,91,6],[138,8,92,2],[138,9,92,3],[139,8,92,3],[139,17,75,16,"setupNotificationCategories"],[139,44,75,43,"setupNotificationCategories"],[139,45,75,43],[140,10,75,43],[140,17,75,43,"_setupNotificationCategories"],[140,45,75,43],[140,46,75,43,"apply"],[140,51,75,43],[140,58,75,43,"arguments"],[140,67,75,43],[141,8,75,43],[142,8,75,43],[142,15,75,16,"setupNotificationCategories"],[142,42,75,43],[143,6,75,43],[144,6,94,2],[145,0,95,0],[146,0,96,0],[147,6,94,2],[148,4,94,2],[149,6,94,2,"key"],[149,9,94,2],[150,6,94,2,"value"],[150,11,94,2],[151,8,94,2],[151,12,94,2,"_registerTokenWithBackend"],[151,37,94,2],[151,44,94,2,"_asyncToGenerator"],[151,61,94,2],[151,62,94,2,"default"],[151,69,94,2],[151,71,97,2],[151,82,97,33,"userId"],[151,88,97,47],[151,90,97,49,"token"],[151,95,97,62],[151,97,97,82],[152,10,98,4],[152,14,98,8],[153,12,99,6],[153,16,99,12,"EXPO_BACKEND_URL"],[153,32,99,28],[153,35,99,28,"_expoVirtualEnv"],[153,50,99,28],[153,51,99,28,"env"],[153,54,99,28],[153,55,99,28,"EXPO_PUBLIC_BACKEND_URL"],[153,78,99,66],[154,12,101,6],[154,16,101,12,"response"],[154,24,101,20],[154,33,101,29,"fetch"],[154,38,101,34],[154,39,101,35],[154,42,101,38,"EXPO_BACKEND_URL"],[154,58,101,54],[154,93,101,89],[154,95,101,91],[155,14,102,8,"method"],[155,20,102,14],[155,22,102,16],[155,28,102,22],[156,14,103,8,"headers"],[156,21,103,15],[156,23,103,17],[157,16,104,10],[157,30,104,24],[157,32,104,26],[158,14,105,8],[158,15,105,9],[159,14,106,8,"body"],[159,18,106,12],[159,20,106,14,"JSON"],[159,24,106,18],[159,25,106,19,"stringify"],[159,34,106,28],[159,35,106,29],[160,16,107,10,"user_id"],[160,23,107,17],[160,25,107,19,"userId"],[160,31,107,25],[161,16,108,10,"expo_token"],[161,26,108,20],[161,28,108,22,"token"],[161,33,108,27],[162,16,109,10,"device_info"],[162,27,109,21],[162,29,109,23],[163,18,110,12,"platform"],[163,26,110,20],[163,28,110,22,"Platform"],[163,40,110,30],[163,41,110,30,"Platform"],[163,49,110,30],[163,50,110,31,"OS"],[163,52,110,33],[164,18,111,12,"deviceName"],[164,28,111,22],[164,30,111,24,"Device"],[164,36,111,30],[164,37,111,31,"deviceName"],[164,47,111,41],[165,18,112,12,"osVersion"],[165,27,112,21],[165,29,112,23,"Device"],[165,35,112,29],[165,36,112,30,"osVersion"],[166,16,113,10],[167,14,114,8],[167,15,114,9],[168,12,115,6],[168,13,115,7],[168,14,115,8],[169,12,117,6],[169,16,117,10,"response"],[169,24,117,18],[169,25,117,19,"ok"],[169,27,117,21],[169,29,117,23],[170,14,118,8,"console"],[170,21,118,15],[170,22,118,16,"log"],[170,25,118,19],[170,26,118,20],[170,71,118,65],[170,72,118,66],[171,14,119,8],[171,21,119,15],[171,25,119,19],[172,12,120,6],[172,13,120,7],[172,19,120,13],[173,14,121,8,"console"],[173,21,121,15],[173,22,121,16,"error"],[173,27,121,21],[173,28,121,22],[173,72,121,66],[173,80,121,74,"response"],[173,88,121,82],[173,89,121,83,"text"],[173,93,121,87],[173,94,121,88],[173,95,121,89],[173,96,121,90],[174,14,122,8],[174,21,122,15],[174,26,122,20],[175,12,123,6],[176,10,124,4],[176,11,124,5],[176,12,124,6],[176,19,124,13,"error"],[176,24,124,18],[176,26,124,20],[177,12,125,6,"console"],[177,19,125,13],[177,20,125,14,"error"],[177,25,125,19],[177,26,125,20],[177,77,125,71],[177,79,125,73,"error"],[177,84,125,78],[177,85,125,79],[178,12,126,6],[178,19,126,13],[178,24,126,18],[179,10,127,4],[180,8,128,2],[180,9,128,3],[181,8,128,3],[181,17,97,8,"registerTokenWithBackend"],[181,41,97,32,"registerTokenWithBackend"],[181,42,97,32,"_x"],[181,44,97,32],[181,46,97,32,"_x2"],[181,49,97,32],[182,10,97,32],[182,17,97,32,"_registerTokenWithBackend"],[182,42,97,32],[182,43,97,32,"apply"],[182,48,97,32],[182,55,97,32,"arguments"],[182,64,97,32],[183,8,97,32],[184,8,97,32],[184,15,97,8,"registerTokenWithBackend"],[184,39,97,32],[185,6,97,32],[186,6,130,2],[187,0,131,0],[188,0,132,0],[189,6,130,2],[190,4,130,2],[191,6,130,2,"key"],[191,9,130,2],[192,6,130,2,"value"],[192,11,130,2],[192,13,133,2],[192,22,133,2,"setupNotificationHandlers"],[192,47,133,27,"setupNotificationHandlers"],[192,48,133,27],[192,50,133,30],[193,8,134,4],[194,8,135,4,"Notifications"],[194,21,135,17],[194,22,135,18,"addNotificationReceivedListener"],[194,53,135,49],[194,54,135,50,"notification"],[194,66,135,62],[194,70,135,66],[195,10,136,6,"console"],[195,17,136,13],[195,18,136,14,"log"],[195,21,136,17],[195,22,136,18],[195,43,136,39],[195,45,136,41,"notification"],[195,57,136,53],[195,58,136,54],[196,8,137,4],[196,9,137,5],[196,10,137,6],[198,8,139,4],[199,8,140,4,"Notifications"],[199,21,140,17],[199,22,140,18,"addNotificationResponseReceivedListener"],[199,61,140,57],[199,62,140,58,"response"],[199,70,140,66],[199,74,140,70],[200,10,141,6],[200,14,141,14,"data"],[200,18,141,18],[200,21,141,23,"response"],[200,29,141,31],[200,30,141,32,"notification"],[200,42,141,44],[200,43,141,45,"request"],[200,50,141,52],[200,51,141,53,"content"],[200,58,141,60],[200,59,141,14,"data"],[200,63,141,18],[201,10,142,6],[201,14,142,14,"actionIdentifier"],[201,30,142,30],[201,33,142,35,"response"],[201,41,142,43],[201,42,142,14,"actionIdentifier"],[201,58,142,30],[202,10,144,6,"console"],[202,17,144,13],[202,18,144,14,"log"],[202,21,144,17],[202,22,144,18],[202,45,144,41],[202,47,144,43],[203,12,144,45,"data"],[203,16,144,49],[204,12,144,51,"actionIdentifier"],[205,10,144,68],[205,11,144,69],[205,12,144,70],[206,10,146,6],[206,14,146,10],[206,15,146,11,"handleNotificationResponse"],[206,41,146,37],[206,42,146,38,"data"],[206,46,146,42],[206,48,146,64,"actionIdentifier"],[206,64,146,80],[206,65,146,81],[207,8,147,4],[207,9,147,5],[207,10,147,6],[208,6,148,2],[210,6,150,2],[211,0,151,0],[212,0,152,0],[213,4,150,2],[214,6,150,2,"key"],[214,9,150,2],[215,6,150,2,"value"],[215,11,150,2],[216,8,150,2],[216,12,150,2,"_handleNotificationResponse"],[216,39,150,2],[216,46,150,2,"_asyncToGenerator"],[216,63,150,2],[216,64,150,2,"default"],[216,71,150,2],[216,73,153,2],[216,84,153,43,"data"],[216,88,153,65],[216,90,153,67,"actionIdentifier"],[216,106,153,91],[216,108,153,93],[217,10,154,4],[217,14,154,4,"_require"],[217,22,154,4],[217,25,154,24,"require"],[217,32,154,31],[217,33,154,31,"_dependencyMap"],[217,47,154,31],[217,66,154,46],[217,67,154,47],[218,12,154,12,"Linking"],[218,19,154,19],[218,22,154,19,"_require"],[218,30,154,19],[218,31,154,12,"Linking"],[218,38,154,19],[219,10,156,4],[219,18,156,12,"actionIdentifier"],[219,34,156,28],[220,12,157,6],[220,17,157,11],[220,28,157,22],[221,14,158,8],[221,18,158,12,"data"],[221,22,158,16],[221,23,158,17,"mapsUrl"],[221,30,158,24],[221,32,158,26],[222,16,159,10],[222,22,159,16,"Linking"],[222,29,159,23],[222,30,159,24,"openURL"],[222,37,159,31],[222,38,159,32,"data"],[222,42,159,36],[222,43,159,37,"mapsUrl"],[222,50,159,44],[222,51,159,45],[223,14,160,8],[224,14,161,8],[225,12,163,6],[225,17,163,11],[225,35,163,29],[226,14,164,8],[227,14,165,8],[228,14,166,8,"console"],[228,21,166,15],[228,22,166,16,"log"],[228,25,166,19],[228,26,166,20],[228,48,166,42],[228,50,166,44,"data"],[228,54,166,48],[228,55,166,49,"appointmentId"],[228,68,166,62],[228,69,166,63],[229,14,167,8],[230,12,169,6],[231,14,170,8],[232,14,171,8],[232,18,171,12,"data"],[232,22,171,16],[232,23,171,17,"mapsUrl"],[232,30,171,24],[232,32,171,26],[233,16,172,10],[233,22,172,16,"Linking"],[233,29,172,23],[233,30,172,24,"openURL"],[233,37,172,31],[233,38,172,32,"data"],[233,42,172,36],[233,43,172,37,"mapsUrl"],[233,50,172,44],[233,51,172,45],[234,14,173,8],[235,14,174,8],[236,10,175,4],[237,8,176,2],[237,9,176,3],[238,8,176,3],[238,17,153,16,"handleNotificationResponse"],[238,43,153,42,"handleNotificationResponse"],[238,44,153,42,"_x3"],[238,47,153,42],[238,49,153,42,"_x4"],[238,52,153,42],[239,10,153,42],[239,17,153,42,"_handleNotificationResponse"],[239,44,153,42],[239,45,153,42,"apply"],[239,50,153,42],[239,57,153,42,"arguments"],[239,66,153,42],[240,8,153,42],[241,8,153,42],[241,15,153,16,"handleNotificationResponse"],[241,41,153,42],[242,6,153,42],[243,6,178,2],[244,0,179,0],[245,0,180,0],[246,6,178,2],[247,4,178,2],[248,6,178,2,"key"],[248,9,178,2],[249,6,178,2,"value"],[249,11,178,2],[250,8,178,2],[250,12,178,2,"_scheduleTestNotification"],[250,37,178,2],[250,44,178,2,"_asyncToGenerator"],[250,61,178,2],[250,62,178,2,"default"],[250,69,178,2],[250,71,181,2],[250,84,181,54],[251,10,181,54],[251,14,181,33,"seconds"],[251,21,181,48],[251,24,181,48,"arguments"],[251,33,181,48],[251,34,181,48,"length"],[251,40,181,48],[251,48,181,48,"arguments"],[251,57,181,48],[251,65,181,48,"undefined"],[251,74,181,48],[251,77,181,48,"arguments"],[251,86,181,48],[251,92,181,51],[251,93,181,52],[252,10,182,4],[252,14,182,8],[253,12,183,6],[253,18,183,12,"Notifications"],[253,31,183,25],[253,32,183,26,"scheduleNotificationAsync"],[253,57,183,51],[253,58,183,52],[254,14,184,8,"content"],[254,21,184,15],[254,23,184,17],[255,16,185,10,"title"],[255,21,185,15],[255,23,185,17],[255,38,185,32],[256,16,186,10,"body"],[256,20,186,14],[256,22,186,16],[256,54,186,48],[257,16,187,10,"data"],[257,20,187,14],[257,22,187,16],[258,18,188,12,"appointmentId"],[258,31,188,25],[258,33,188,27],[258,43,188,37],[259,18,189,12,"appointmentType"],[259,33,189,27],[259,35,189,29],[259,44,189,38],[260,18,190,12,"doctorName"],[260,28,190,22],[260,30,190,24],[260,41,190,35],[261,18,191,12,"mapsUrl"],[261,25,191,19],[261,27,191,21],[262,16,192,10],[262,17,192,11],[263,16,193,10,"categoryIdentifier"],[263,34,193,28],[263,36,193,30],[263,58,193,52],[264,16,194,10,"sound"],[264,21,194,15],[264,23,194,17],[265,14,195,8],[265,15,195,9],[266,14,196,8,"trigger"],[266,21,196,15],[266,23,196,17],[267,16,197,10,"seconds"],[267,23,197,17],[267,25,197,19,"seconds"],[268,14,198,8],[269,12,199,6],[269,13,199,7],[269,14,199,8],[270,12,201,6,"console"],[270,19,201,13],[270,20,201,14,"log"],[270,23,201,17],[270,24,201,18],[270,64,201,58,"seconds"],[270,71,201,65],[270,82,201,76],[270,83,201,77],[271,10,202,4],[271,11,202,5],[271,12,202,6],[271,19,202,13,"error"],[271,24,202,18],[271,26,202,20],[272,12,203,6,"console"],[272,19,203,13],[272,20,203,14,"error"],[272,25,203,19],[272,26,203,20],[272,67,203,61],[272,69,203,63,"error"],[272,74,203,68],[272,75,203,69],[273,10,204,4],[274,8,205,2],[274,9,205,3],[275,8,205,3],[275,17,181,8,"scheduleTestNotification"],[275,41,181,32,"scheduleTestNotification"],[275,42,181,32],[276,10,181,32],[276,17,181,32,"_scheduleTestNotification"],[276,42,181,32],[276,43,181,32,"apply"],[276,48,181,32],[276,55,181,32,"arguments"],[276,64,181,32],[277,8,181,32],[278,8,181,32],[278,15,181,8,"scheduleTestNotification"],[278,39,181,32],[279,6,181,32],[280,6,207,2],[281,0,208,0],[282,0,209,0],[283,6,207,2],[284,4,207,2],[285,6,207,2,"key"],[285,9,207,2],[286,6,207,2,"value"],[286,11,207,2],[287,8,207,2],[287,12,207,2,"_cancelAllScheduledNotifications"],[287,44,207,2],[287,51,207,2,"_asyncToGenerator"],[287,68,207,2],[287,69,207,2,"default"],[287,76,207,2],[287,78,210,2],[287,91,210,42],[288,10,211,4],[288,16,211,10,"Notifications"],[288,29,211,23],[288,30,211,24,"cancelAllScheduledNotificationsAsync"],[288,66,211,60],[288,67,211,61],[288,68,211,62],[289,10,212,4,"console"],[289,17,212,11],[289,18,212,12,"log"],[289,21,212,15],[289,22,212,16],[289,77,212,71],[289,78,212,72],[290,8,213,2],[290,9,213,3],[291,8,213,3],[291,17,210,8,"cancelAllScheduledNotifications"],[291,48,210,39,"cancelAllScheduledNotifications"],[291,49,210,39],[292,10,210,39],[292,17,210,39,"_cancelAllScheduledNotifications"],[292,49,210,39],[292,50,210,39,"apply"],[292,55,210,39],[292,62,210,39,"arguments"],[292,71,210,39],[293,8,210,39],[294,8,210,39],[294,15,210,8,"cancelAllScheduledNotifications"],[294,46,210,39],[295,6,210,39],[296,6,215,2],[297,0,216,0],[298,0,217,0],[299,6,215,2],[300,4,215,2],[301,6,215,2,"key"],[301,9,215,2],[302,6,215,2,"value"],[302,11,215,2],[303,8,215,2],[303,12,215,2,"_getPendingNotificationsCount"],[303,41,215,2],[303,48,215,2,"_asyncToGenerator"],[303,65,215,2],[303,66,215,2,"default"],[303,73,215,2],[303,75,218,2],[303,88,218,56],[304,10,219,4],[304,14,219,10,"notifications"],[304,27,219,23],[304,36,219,32,"Notifications"],[304,49,219,45],[304,50,219,46,"getAllScheduledNotificationsAsync"],[304,83,219,79],[304,84,219,80],[304,85,219,81],[305,10,220,4],[305,17,220,11,"notifications"],[305,30,220,24],[305,31,220,25,"length"],[305,37,220,31],[306,8,221,2],[306,9,221,3],[307,8,221,3],[307,17,218,8,"getPendingNotificationsCount"],[307,45,218,36,"getPendingNotificationsCount"],[307,46,218,36],[308,10,218,36],[308,17,218,36,"_getPendingNotificationsCount"],[308,46,218,36],[308,47,218,36,"apply"],[308,52,218,36],[308,59,218,36,"arguments"],[308,68,218,36],[309,8,218,36],[310,8,218,36],[310,15,218,8,"getPendingNotificationsCount"],[310,43,218,36],[311,6,218,36],[312,4,218,36],[313,2,218,36],[314,2,224,0],[314,6,224,0,"_default"],[314,14,224,0],[314,17,224,15],[314,21,224,19,"NotificationService"],[314,40,224,38],[314,41,224,39],[314,42,224,40],[315,0,224,41],[315,3]],"functionMap":{"names":["<global>","Notifications.setNotificationHandler$argument_0.handleNotification","NotificationService","NotificationService#registerForPushNotifications","NotificationService#setupNotificationCategories","NotificationService#registerTokenWithBackend","NotificationService#setupNotificationHandlers","Notifications.addNotificationReceivedListener$argument_0","Notifications.addNotificationResponseReceivedListener$argument_0","NotificationService#handleNotificationResponse","NotificationService#scheduleTestNotification","NotificationService#cancelAllScheduledNotifications","NotificationService#getPendingNotificationsCount"],"mappings":"AAA;sBCO;IDI;AEc;ECM;GDsC;EEK;GFiB;EGK;GH+B;EIK;kDCE;KDE;0DEG;KFO;GJC;EOK;GPuB;EQK;GRwB;ESK;GTG;EUK;GVG;CFC"},"hasCjsExports":false},"type":"js/module"}]}