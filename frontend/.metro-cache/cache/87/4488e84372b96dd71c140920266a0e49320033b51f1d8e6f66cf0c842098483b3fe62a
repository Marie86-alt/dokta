{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"],"imports":1}},{"name":"expo-device","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":53},"end":{"line":2,"column":38,"index":91}}],"key":"bBpmAhO1g++sdeUzQmFVGoQIVwg=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":92},"end":{"line":3,"column":39,"index":131}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"expo-linking","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":154,"column":24,"index":4477},"end":{"line":154,"column":47,"index":4500}}],"key":"F3IRuZxT1cyHB74rJR7WrB3Q6GA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _expoNotifications = require(_dependencyMap[1], \"expo-notifications\");\n  var Notifications = _interopNamespace(_expoNotifications);\n  var _expoDevice = require(_dependencyMap[2], \"expo-device\");\n  var Device = _interopNamespace(_expoDevice);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[4], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Configuration du comportement des notifications\n  Notifications.setNotificationHandler({\n    handleNotification: async () => ({\n      shouldShowAlert: true,\n      shouldPlaySound: true,\n      shouldSetBadge: true\n    })\n  });\n  class NotificationService {\n    expoPushToken = null;\n\n    /**\n     * Enregistrer l'appareil pour les notifications push\n     */\n    async registerForPushNotifications() {\n      try {\n        if (!Device.isDevice) {\n          console.log('Les notifications push n√©cessitent un appareil physique');\n          return null;\n        }\n\n        // V√©rifier les permissions existantes\n        const {\n          status: existingStatus\n        } = await Notifications.getPermissionsAsync();\n        let finalStatus = existingStatus;\n\n        // Demander les permissions si n√©cessaires\n        if (existingStatus !== 'granted') {\n          const {\n            status\n          } = await Notifications.requestPermissionsAsync();\n          finalStatus = status;\n        }\n        if (finalStatus !== 'granted') {\n          console.log('Permission refus√©e pour les notifications push');\n          return null;\n        }\n\n        // Obtenir le token Expo\n        const tokenData = await Notifications.getExpoPushTokenAsync({\n          projectId: Constants.default.expoConfig?.extra?.eas?.projectId\n        });\n        this.expoPushToken = tokenData.data;\n        console.log('Token push Expo:', this.expoPushToken);\n\n        // Configurer les cat√©gories de notifications\n        await this.setupNotificationCategories();\n        return this.expoPushToken;\n      } catch (error) {\n        console.error('Erreur lors de l\\'enregistrement des notifications:', error);\n        return null;\n      }\n    }\n\n    /**\n     * Configurer les cat√©gories de notifications avec actions\n     */\n    async setupNotificationCategories() {\n      await Notifications.setNotificationCategoryAsync('appointment-reminder', [{\n        identifier: 'view-maps',\n        buttonTitle: 'Voir itin√©raire',\n        options: {\n          foreground: true\n        }\n      }, {\n        identifier: 'view-appointment',\n        buttonTitle: 'Voir RDV',\n        options: {\n          foreground: true\n        }\n      }]);\n    }\n\n    /**\n     * Enregistrer le token sur le serveur backend\n     */\n    async registerTokenWithBackend(userId, token) {\n      try {\n        const EXPO_BACKEND_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL;\n        const response = await fetch(`${EXPO_BACKEND_URL}/api/notifications/register-token`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: userId,\n            expo_token: token,\n            device_info: {\n              platform: Platform.default.OS,\n              deviceName: Device.deviceName,\n              osVersion: Device.osVersion\n            }\n          })\n        });\n        if (response.ok) {\n          console.log('Token enregistr√© avec succ√®s sur le serveur');\n          return true;\n        } else {\n          console.error('Erreur lors de l\\'enregistrement du token:', await response.text());\n          return false;\n        }\n      } catch (error) {\n        console.error('Erreur r√©seau lors de l\\'enregistrement du token:', error);\n        return false;\n      }\n    }\n\n    /**\n     * Configurer les gestionnaires de notifications\n     */\n    setupNotificationHandlers() {\n      // Notification re√ßue en premier plan\n      Notifications.addNotificationReceivedListener(notification => {\n        console.log('Notification re√ßue:', notification);\n      });\n\n      // R√©ponse √† une notification (clic utilisateur)\n      Notifications.addNotificationResponseReceivedListener(response => {\n        const {\n          data\n        } = response.notification.request.content;\n        const {\n          actionIdentifier\n        } = response;\n        console.log('R√©ponse notification:', {\n          data,\n          actionIdentifier\n        });\n        this.handleNotificationResponse(data, actionIdentifier);\n      });\n    }\n\n    /**\n     * G√©rer les r√©ponses aux notifications\n     */\n    async handleNotificationResponse(data, actionIdentifier) {\n      const {\n        Linking\n      } = require(_dependencyMap[5], \"expo-linking\");\n      switch (actionIdentifier) {\n        case 'view-maps':\n          if (data.mapsUrl) {\n            await Linking.openURL(data.mapsUrl);\n          }\n          break;\n        case 'view-appointment':\n          // Navigation vers les d√©tails du rendez-vous\n          // Cette logique sera impl√©ment√©e selon votre syst√®me de navigation\n          console.log('Navigation vers RDV:', data.appointmentId);\n          break;\n        default:\n          // Clic par d√©faut sur la notification\n          if (data.mapsUrl) {\n            await Linking.openURL(data.mapsUrl);\n          }\n          break;\n      }\n    }\n\n    /**\n     * Programmer une notification locale de test\n     */\n    async scheduleTestNotification(seconds = 5) {\n      try {\n        await Notifications.scheduleNotificationAsync({\n          content: {\n            title: 'Test DOKTA ü©∫',\n            body: 'Votre rendez-vous dans 1 heure',\n            data: {\n              appointmentId: 'test-123',\n              appointmentType: 'cabinet',\n              doctorName: 'Dr Mbarga',\n              mapsUrl: 'https://maps.google.com/?q=Yaound√©,Cameroon'\n            },\n            categoryIdentifier: 'appointment-reminder',\n            sound: 'default'\n          },\n          trigger: {\n            seconds: seconds\n          }\n        });\n        console.log(`Notification de test programm√©e dans ${seconds} secondes`);\n      } catch (error) {\n        console.error('Erreur programmation notification test:', error);\n      }\n    }\n\n    /**\n     * Annuler toutes les notifications programm√©es\n     */\n    async cancelAllScheduledNotifications() {\n      await Notifications.cancelAllScheduledNotificationsAsync();\n      console.log('Toutes les notifications programm√©es ont √©t√© annul√©es');\n    }\n\n    /**\n     * Obtenir le nombre de notifications en attente\n     */\n    async getPendingNotificationsCount() {\n      const notifications = await Notifications.getAllScheduledNotificationsAsync();\n      return notifications.length;\n    }\n  }\n  var _default = new NotificationService();\n});","lineCount":247,"map":[[27,2,224,0,"Object"],[27,8,224,0],[27,9,224,0,"defineProperty"],[27,23,224,0],[27,24,224,0,"exports"],[27,31,224,0],[28,4,224,0,"enumerable"],[28,14,224,0],[29,4,224,0,"get"],[29,7,224,0],[29,18,224,0,"get"],[29,19,224,0],[30,6,224,0],[30,13,224,0,"_default"],[30,21,224,0],[31,4,224,0],[32,2,224,0],[33,2,224,41],[33,6,224,41,"_expoVirtualEnv"],[33,21,224,41],[33,24,224,41,"require"],[33,31,224,41],[33,32,224,41,"_dependencyMap"],[33,46,224,41],[34,2,1,0],[34,6,1,0,"_expoNotifications"],[34,24,1,0],[34,27,1,0,"require"],[34,34,1,0],[34,35,1,0,"_dependencyMap"],[34,49,1,0],[35,2,1,0],[35,6,1,0,"Notifications"],[35,19,1,0],[35,22,1,0,"_interopNamespace"],[35,39,1,0],[35,40,1,0,"_expoNotifications"],[35,58,1,0],[36,2,2,0],[36,6,2,0,"_expoDevice"],[36,17,2,0],[36,20,2,0,"require"],[36,27,2,0],[36,28,2,0,"_dependencyMap"],[36,42,2,0],[37,2,2,0],[37,6,2,0,"Device"],[37,12,2,0],[37,15,2,0,"_interopNamespace"],[37,32,2,0],[37,33,2,0,"_expoDevice"],[37,44,2,0],[38,2,3,0],[38,6,3,0,"_expoConstants"],[38,20,3,0],[38,23,3,0,"require"],[38,30,3,0],[38,31,3,0,"_dependencyMap"],[38,45,3,0],[39,2,3,0],[39,6,3,0,"Constants"],[39,15,3,0],[39,18,3,0,"_interopDefault"],[39,33,3,0],[39,34,3,0,"_expoConstants"],[39,48,3,0],[40,2,3,39],[40,6,3,39,"_reactNativeWebDistExportsPlatform"],[40,40,3,39],[40,43,3,39,"require"],[40,50,3,39],[40,51,3,39,"_dependencyMap"],[40,65,3,39],[41,2,3,39],[41,6,3,39,"Platform"],[41,14,3,39],[41,17,3,39,"_interopDefault"],[41,32,3,39],[41,33,3,39,"_reactNativeWebDistExportsPlatform"],[41,67,3,39],[42,2,6,0],[43,2,7,0,"Notifications"],[43,15,7,13],[43,16,7,14,"setNotificationHandler"],[43,38,7,36],[43,39,7,37],[44,4,8,2,"handleNotification"],[44,22,8,20],[44,24,8,22],[44,30,8,22,"handleNotification"],[44,31,8,22],[44,37,8,35],[45,6,9,4,"shouldShowAlert"],[45,21,9,19],[45,23,9,21],[45,27,9,25],[46,6,10,4,"shouldPlaySound"],[46,21,10,19],[46,23,10,21],[46,27,10,25],[47,6,11,4,"shouldSetBadge"],[47,20,11,18],[47,22,11,20],[48,4,12,2],[48,5,12,3],[49,2,13,0],[49,3,13,1],[49,4,13,2],[50,2,26,0],[50,8,26,6,"NotificationService"],[50,27,26,25],[50,28,26,26],[51,4,27,10,"expoPushToken"],[51,17,27,23],[51,20,27,41],[51,24,27,45],[53,4,29,2],[54,0,30,0],[55,0,31,0],[56,4,32,2],[56,10,32,8,"registerForPushNotifications"],[56,38,32,36,"registerForPushNotifications"],[56,39,32,36],[56,41,32,63],[57,6,33,4],[57,10,33,8],[58,8,34,6],[58,12,34,10],[58,13,34,11,"Device"],[58,19,34,17],[58,20,34,18,"isDevice"],[58,28,34,26],[58,30,34,28],[59,10,35,8,"console"],[59,17,35,15],[59,18,35,16,"log"],[59,21,35,19],[59,22,35,20],[59,79,35,77],[59,80,35,78],[60,10,36,8],[60,17,36,15],[60,21,36,19],[61,8,37,6],[63,8,39,6],[64,8,40,6],[64,14,40,12],[65,10,40,14,"status"],[65,16,40,20],[65,18,40,22,"existingStatus"],[66,8,40,37],[66,9,40,38],[66,12,40,41],[66,18,40,47,"Notifications"],[66,31,40,60],[66,32,40,61,"getPermissionsAsync"],[66,51,40,80],[66,52,40,81],[66,53,40,82],[67,8,41,6],[67,12,41,10,"finalStatus"],[67,23,41,21],[67,26,41,24,"existingStatus"],[67,40,41,38],[69,8,43,6],[70,8,44,6],[70,12,44,10,"existingStatus"],[70,26,44,24],[70,31,44,29],[70,40,44,38],[70,42,44,40],[71,10,45,8],[71,16,45,14],[72,12,45,16,"status"],[73,10,45,23],[73,11,45,24],[73,14,45,27],[73,20,45,33,"Notifications"],[73,33,45,46],[73,34,45,47,"requestPermissionsAsync"],[73,57,45,70],[73,58,45,71],[73,59,45,72],[74,10,46,8,"finalStatus"],[74,21,46,19],[74,24,46,22,"status"],[74,30,46,28],[75,8,47,6],[76,8,49,6],[76,12,49,10,"finalStatus"],[76,23,49,21],[76,28,49,26],[76,37,49,35],[76,39,49,37],[77,10,50,8,"console"],[77,17,50,15],[77,18,50,16,"log"],[77,21,50,19],[77,22,50,20],[77,70,50,68],[77,71,50,69],[78,10,51,8],[78,17,51,15],[78,21,51,19],[79,8,52,6],[81,8,54,6],[82,8,55,6],[82,14,55,12,"tokenData"],[82,23,55,21],[82,26,55,24],[82,32,55,30,"Notifications"],[82,45,55,43],[82,46,55,44,"getExpoPushTokenAsync"],[82,67,55,65],[82,68,55,66],[83,10,56,8,"projectId"],[83,19,56,17],[83,21,56,19,"Constants"],[83,30,56,28],[83,31,56,28,"default"],[83,38,56,28],[83,39,56,29,"expoConfig"],[83,49,56,39],[83,51,56,41,"extra"],[83,56,56,46],[83,58,56,48,"eas"],[83,61,56,51],[83,63,56,53,"projectId"],[84,8,57,6],[84,9,57,7],[84,10,57,8],[85,8,59,6],[85,12,59,10],[85,13,59,11,"expoPushToken"],[85,26,59,24],[85,29,59,27,"tokenData"],[85,38,59,36],[85,39,59,37,"data"],[85,43,59,41],[86,8,60,6,"console"],[86,15,60,13],[86,16,60,14,"log"],[86,19,60,17],[86,20,60,18],[86,38,60,36],[86,40,60,38],[86,44,60,42],[86,45,60,43,"expoPushToken"],[86,58,60,56],[86,59,60,57],[88,8,62,6],[89,8,63,6],[89,14,63,12],[89,18,63,16],[89,19,63,17,"setupNotificationCategories"],[89,46,63,44],[89,47,63,45],[89,48,63,46],[90,8,65,6],[90,15,65,13],[90,19,65,17],[90,20,65,18,"expoPushToken"],[90,33,65,31],[91,6,66,4],[91,7,66,5],[91,8,66,6],[91,15,66,13,"error"],[91,20,66,18],[91,22,66,20],[92,8,67,6,"console"],[92,15,67,13],[92,16,67,14,"error"],[92,21,67,19],[92,22,67,20],[92,75,67,73],[92,77,67,75,"error"],[92,82,67,80],[92,83,67,81],[93,8,68,6],[93,15,68,13],[93,19,68,17],[94,6,69,4],[95,4,70,2],[97,4,72,2],[98,0,73,0],[99,0,74,0],[100,4,75,2],[100,10,75,16,"setupNotificationCategories"],[100,37,75,43,"setupNotificationCategories"],[100,38,75,43],[100,40,75,46],[101,6,76,4],[101,12,76,10,"Notifications"],[101,25,76,23],[101,26,76,24,"setNotificationCategoryAsync"],[101,54,76,52],[101,55,76,53],[101,77,76,75],[101,79,76,77],[101,80,77,6],[102,8,78,8,"identifier"],[102,18,78,18],[102,20,78,20],[102,31,78,31],[103,8,79,8,"buttonTitle"],[103,19,79,19],[103,21,79,21],[103,38,79,38],[104,8,80,8,"options"],[104,15,80,15],[104,17,80,17],[105,10,81,10,"foreground"],[105,20,81,20],[105,22,81,22],[106,8,82,8],[107,6,83,6],[107,7,83,7],[107,9,84,6],[108,8,85,8,"identifier"],[108,18,85,18],[108,20,85,20],[108,38,85,38],[109,8,86,8,"buttonTitle"],[109,19,86,19],[109,21,86,21],[109,31,86,31],[110,8,87,8,"options"],[110,15,87,15],[110,17,87,17],[111,10,88,10,"foreground"],[111,20,88,20],[111,22,88,22],[112,8,89,8],[113,6,90,6],[113,7,90,7],[113,8,91,5],[113,9,91,6],[114,4,92,2],[116,4,94,2],[117,0,95,0],[118,0,96,0],[119,4,97,2],[119,10,97,8,"registerTokenWithBackend"],[119,34,97,32,"registerTokenWithBackend"],[119,35,97,33,"userId"],[119,41,97,47],[119,43,97,49,"token"],[119,48,97,62],[119,50,97,82],[120,6,98,4],[120,10,98,8],[121,8,99,6],[121,14,99,12,"EXPO_BACKEND_URL"],[121,30,99,28],[121,33,99,28,"_expoVirtualEnv"],[121,48,99,28],[121,49,99,28,"env"],[121,52,99,28],[121,53,99,28,"EXPO_PUBLIC_BACKEND_URL"],[121,76,99,66],[122,8,101,6],[122,14,101,12,"response"],[122,22,101,20],[122,25,101,23],[122,31,101,29,"fetch"],[122,36,101,34],[122,37,101,35],[122,40,101,38,"EXPO_BACKEND_URL"],[122,56,101,54],[122,91,101,89],[122,93,101,91],[123,10,102,8,"method"],[123,16,102,14],[123,18,102,16],[123,24,102,22],[124,10,103,8,"headers"],[124,17,103,15],[124,19,103,17],[125,12,104,10],[125,26,104,24],[125,28,104,26],[126,10,105,8],[126,11,105,9],[127,10,106,8,"body"],[127,14,106,12],[127,16,106,14,"JSON"],[127,20,106,18],[127,21,106,19,"stringify"],[127,30,106,28],[127,31,106,29],[128,12,107,10,"user_id"],[128,19,107,17],[128,21,107,19,"userId"],[128,27,107,25],[129,12,108,10,"expo_token"],[129,22,108,20],[129,24,108,22,"token"],[129,29,108,27],[130,12,109,10,"device_info"],[130,23,109,21],[130,25,109,23],[131,14,110,12,"platform"],[131,22,110,20],[131,24,110,22,"Platform"],[131,32,110,30],[131,33,110,30,"default"],[131,40,110,30],[131,41,110,31,"OS"],[131,43,110,33],[132,14,111,12,"deviceName"],[132,24,111,22],[132,26,111,24,"Device"],[132,32,111,30],[132,33,111,31,"deviceName"],[132,43,111,41],[133,14,112,12,"osVersion"],[133,23,112,21],[133,25,112,23,"Device"],[133,31,112,29],[133,32,112,30,"osVersion"],[134,12,113,10],[135,10,114,8],[135,11,114,9],[136,8,115,6],[136,9,115,7],[136,10,115,8],[137,8,117,6],[137,12,117,10,"response"],[137,20,117,18],[137,21,117,19,"ok"],[137,23,117,21],[137,25,117,23],[138,10,118,8,"console"],[138,17,118,15],[138,18,118,16,"log"],[138,21,118,19],[138,22,118,20],[138,67,118,65],[138,68,118,66],[139,10,119,8],[139,17,119,15],[139,21,119,19],[140,8,120,6],[140,9,120,7],[140,15,120,13],[141,10,121,8,"console"],[141,17,121,15],[141,18,121,16,"error"],[141,23,121,21],[141,24,121,22],[141,68,121,66],[141,70,121,68],[141,76,121,74,"response"],[141,84,121,82],[141,85,121,83,"text"],[141,89,121,87],[141,90,121,88],[141,91,121,89],[141,92,121,90],[142,10,122,8],[142,17,122,15],[142,22,122,20],[143,8,123,6],[144,6,124,4],[144,7,124,5],[144,8,124,6],[144,15,124,13,"error"],[144,20,124,18],[144,22,124,20],[145,8,125,6,"console"],[145,15,125,13],[145,16,125,14,"error"],[145,21,125,19],[145,22,125,20],[145,73,125,71],[145,75,125,73,"error"],[145,80,125,78],[145,81,125,79],[146,8,126,6],[146,15,126,13],[146,20,126,18],[147,6,127,4],[148,4,128,2],[150,4,130,2],[151,0,131,0],[152,0,132,0],[153,4,133,2,"setupNotificationHandlers"],[153,29,133,27,"setupNotificationHandlers"],[153,30,133,27],[153,32,133,30],[154,6,134,4],[155,6,135,4,"Notifications"],[155,19,135,17],[155,20,135,18,"addNotificationReceivedListener"],[155,51,135,49],[155,52,135,50,"notification"],[155,64,135,62],[155,68,135,66],[156,8,136,6,"console"],[156,15,136,13],[156,16,136,14,"log"],[156,19,136,17],[156,20,136,18],[156,41,136,39],[156,43,136,41,"notification"],[156,55,136,53],[156,56,136,54],[157,6,137,4],[157,7,137,5],[157,8,137,6],[159,6,139,4],[160,6,140,4,"Notifications"],[160,19,140,17],[160,20,140,18,"addNotificationResponseReceivedListener"],[160,59,140,57],[160,60,140,58,"response"],[160,68,140,66],[160,72,140,70],[161,8,141,6],[161,14,141,12],[162,10,141,14,"data"],[163,8,141,19],[163,9,141,20],[163,12,141,23,"response"],[163,20,141,31],[163,21,141,32,"notification"],[163,33,141,44],[163,34,141,45,"request"],[163,41,141,52],[163,42,141,53,"content"],[163,49,141,60],[164,8,142,6],[164,14,142,12],[165,10,142,14,"actionIdentifier"],[166,8,142,31],[166,9,142,32],[166,12,142,35,"response"],[166,20,142,43],[167,8,144,6,"console"],[167,15,144,13],[167,16,144,14,"log"],[167,19,144,17],[167,20,144,18],[167,43,144,41],[167,45,144,43],[168,10,144,45,"data"],[168,14,144,49],[169,10,144,51,"actionIdentifier"],[170,8,144,68],[170,9,144,69],[170,10,144,70],[171,8,146,6],[171,12,146,10],[171,13,146,11,"handleNotificationResponse"],[171,39,146,37],[171,40,146,38,"data"],[171,44,146,42],[171,46,146,64,"actionIdentifier"],[171,62,146,80],[171,63,146,81],[172,6,147,4],[172,7,147,5],[172,8,147,6],[173,4,148,2],[175,4,150,2],[176,0,151,0],[177,0,152,0],[178,4,153,2],[178,10,153,16,"handleNotificationResponse"],[178,36,153,42,"handleNotificationResponse"],[178,37,153,43,"data"],[178,41,153,65],[178,43,153,67,"actionIdentifier"],[178,59,153,91],[178,61,153,93],[179,6,154,4],[179,12,154,10],[180,8,154,12,"Linking"],[181,6,154,20],[181,7,154,21],[181,10,154,24,"require"],[181,17,154,31],[181,18,154,31,"_dependencyMap"],[181,32,154,31],[181,51,154,46],[181,52,154,47],[182,6,156,4],[182,14,156,12,"actionIdentifier"],[182,30,156,28],[183,8,157,6],[183,13,157,11],[183,24,157,22],[184,10,158,8],[184,14,158,12,"data"],[184,18,158,16],[184,19,158,17,"mapsUrl"],[184,26,158,24],[184,28,158,26],[185,12,159,10],[185,18,159,16,"Linking"],[185,25,159,23],[185,26,159,24,"openURL"],[185,33,159,31],[185,34,159,32,"data"],[185,38,159,36],[185,39,159,37,"mapsUrl"],[185,46,159,44],[185,47,159,45],[186,10,160,8],[187,10,161,8],[188,8,163,6],[188,13,163,11],[188,31,163,29],[189,10,164,8],[190,10,165,8],[191,10,166,8,"console"],[191,17,166,15],[191,18,166,16,"log"],[191,21,166,19],[191,22,166,20],[191,44,166,42],[191,46,166,44,"data"],[191,50,166,48],[191,51,166,49,"appointmentId"],[191,64,166,62],[191,65,166,63],[192,10,167,8],[193,8,169,6],[194,10,170,8],[195,10,171,8],[195,14,171,12,"data"],[195,18,171,16],[195,19,171,17,"mapsUrl"],[195,26,171,24],[195,28,171,26],[196,12,172,10],[196,18,172,16,"Linking"],[196,25,172,23],[196,26,172,24,"openURL"],[196,33,172,31],[196,34,172,32,"data"],[196,38,172,36],[196,39,172,37,"mapsUrl"],[196,46,172,44],[196,47,172,45],[197,10,173,8],[198,10,174,8],[199,6,175,4],[200,4,176,2],[202,4,178,2],[203,0,179,0],[204,0,180,0],[205,4,181,2],[205,10,181,8,"scheduleTestNotification"],[205,34,181,32,"scheduleTestNotification"],[205,35,181,33,"seconds"],[205,42,181,48],[205,45,181,51],[205,46,181,52],[205,48,181,54],[206,6,182,4],[206,10,182,8],[207,8,183,6],[207,14,183,12,"Notifications"],[207,27,183,25],[207,28,183,26,"scheduleNotificationAsync"],[207,53,183,51],[207,54,183,52],[208,10,184,8,"content"],[208,17,184,15],[208,19,184,17],[209,12,185,10,"title"],[209,17,185,15],[209,19,185,17],[209,34,185,32],[210,12,186,10,"body"],[210,16,186,14],[210,18,186,16],[210,50,186,48],[211,12,187,10,"data"],[211,16,187,14],[211,18,187,16],[212,14,188,12,"appointmentId"],[212,27,188,25],[212,29,188,27],[212,39,188,37],[213,14,189,12,"appointmentType"],[213,29,189,27],[213,31,189,29],[213,40,189,38],[214,14,190,12,"doctorName"],[214,24,190,22],[214,26,190,24],[214,37,190,35],[215,14,191,12,"mapsUrl"],[215,21,191,19],[215,23,191,21],[216,12,192,10],[216,13,192,11],[217,12,193,10,"categoryIdentifier"],[217,30,193,28],[217,32,193,30],[217,54,193,52],[218,12,194,10,"sound"],[218,17,194,15],[218,19,194,17],[219,10,195,8],[219,11,195,9],[220,10,196,8,"trigger"],[220,17,196,15],[220,19,196,17],[221,12,197,10,"seconds"],[221,19,197,17],[221,21,197,19,"seconds"],[222,10,198,8],[223,8,199,6],[223,9,199,7],[223,10,199,8],[224,8,201,6,"console"],[224,15,201,13],[224,16,201,14,"log"],[224,19,201,17],[224,20,201,18],[224,60,201,58,"seconds"],[224,67,201,65],[224,78,201,76],[224,79,201,77],[225,6,202,4],[225,7,202,5],[225,8,202,6],[225,15,202,13,"error"],[225,20,202,18],[225,22,202,20],[226,8,203,6,"console"],[226,15,203,13],[226,16,203,14,"error"],[226,21,203,19],[226,22,203,20],[226,63,203,61],[226,65,203,63,"error"],[226,70,203,68],[226,71,203,69],[227,6,204,4],[228,4,205,2],[230,4,207,2],[231,0,208,0],[232,0,209,0],[233,4,210,2],[233,10,210,8,"cancelAllScheduledNotifications"],[233,41,210,39,"cancelAllScheduledNotifications"],[233,42,210,39],[233,44,210,42],[234,6,211,4],[234,12,211,10,"Notifications"],[234,25,211,23],[234,26,211,24,"cancelAllScheduledNotificationsAsync"],[234,62,211,60],[234,63,211,61],[234,64,211,62],[235,6,212,4,"console"],[235,13,212,11],[235,14,212,12,"log"],[235,17,212,15],[235,18,212,16],[235,73,212,71],[235,74,212,72],[236,4,213,2],[238,4,215,2],[239,0,216,0],[240,0,217,0],[241,4,218,2],[241,10,218,8,"getPendingNotificationsCount"],[241,38,218,36,"getPendingNotificationsCount"],[241,39,218,36],[241,41,218,56],[242,6,219,4],[242,12,219,10,"notifications"],[242,25,219,23],[242,28,219,26],[242,34,219,32,"Notifications"],[242,47,219,45],[242,48,219,46,"getAllScheduledNotificationsAsync"],[242,81,219,79],[242,82,219,80],[242,83,219,81],[243,6,220,4],[243,13,220,11,"notifications"],[243,26,220,24],[243,27,220,25,"length"],[243,33,220,31],[244,4,221,2],[245,2,222,0],[246,2,224,0],[246,6,224,0,"_default"],[246,14,224,0],[246,17,224,15],[246,21,224,19,"NotificationService"],[246,40,224,38],[246,41,224,39],[246,42,224,40],[247,0,224,41],[247,3]],"functionMap":{"names":["<global>","Notifications.setNotificationHandler$argument_0.handleNotification","NotificationService","NotificationService#registerForPushNotifications","NotificationService#setupNotificationCategories","NotificationService#registerTokenWithBackend","NotificationService#setupNotificationHandlers","Notifications.addNotificationReceivedListener$argument_0","Notifications.addNotificationResponseReceivedListener$argument_0","NotificationService#handleNotificationResponse","NotificationService#scheduleTestNotification","NotificationService#cancelAllScheduledNotifications","NotificationService#getPendingNotificationsCount"],"mappings":"AAA;sBCO;IDI;AEc;ECM;GDsC;EEK;GFiB;EGK;GH+B;EIK;kDCE;KDE;0DEG;KFO;GJC;EOK;GPuB;EQK;GRwB;ESK;GTG;EUK;GVG;CFC"},"hasCjsExports":false},"type":"js/module"}]}